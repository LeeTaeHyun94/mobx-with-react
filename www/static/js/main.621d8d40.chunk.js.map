{"version":3,"sources":["components/Counter.jsx","components/SuperMarketTemplate.jsx","components/ShopItem.jsx","components/ShopItemList.jsx","components/BasketItem.jsx","components/BasketItemList.jsx","components/SuperMarket.jsx","App.jsx","serviceWorker.js","index.jsx","stores/CounterStore.js"],"names":["Counter","inject","stores","number","counter","increase","decrease","observer","_this$props","this","props","react_default","a","createElement","type","onClick","Component","SuperMarketTemplate","_ref","items","basket","className","ShopItem","name","price","ShopItemList","itemList","map","item","src_components_ShopItem","Object","assign","key","BasketItem","count","BasketItemList","src_components_BasketItem","SuperMarket","src_components_SuperMarketTemplate","components_ShopItemList","components_BasketItemList","App","components_Counter","components_SuperMarket","process","isLocalhost","Boolean","window","location","hostname","match","register","config","navigator","URL","href","origin","addEventListener","swUrl","concat","fetch","then","response","contentType","headers","get","status","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","error","counterStore","observable","action","_this","_this2","startApp","ReactDOM","render","index_module","src_App","document","getElementById","cordova"],"mappings":"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","file":"static/js/main.621d8d40.chunk.js","sourcesContent":["import React, { Component } from 'react';\n// import { observable, action } from 'mobx';\nimport { observer, inject } from 'mobx-react';\n\n// @inject('counter')\n@inject(stores => ({\n  number: stores.counter.number,\n  increase: stores.counter.increase,\n  decrease: stores.counter.decrease,\n}))\n@observer\nclass Counter extends Component {\n  //   @observable number = 0;\n\n  //   @action\n  //   increase = () => {\n  //     this.number += 1;\n  //   };\n\n  //   @action\n  //   decrease = () => {\n  //     this.number -= 1;\n  //   };\n\n  render() {\n    // const { counter } = this.props;\n    const { number, increase, decrease } = this.props;\n    return (\n      <div>\n        <h1>{number}</h1>\n        <button type=\"button\" onClick={increase}>\n          +1\n        </button>\n        <button type=\"button\" onClick={decrease}>\n          -1\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Counter;\n","import React from 'react';\nimport './SuperMarketTemplate.css';\n\nconst SuperMarketTemplate = ({ items, basket }) => (\n  <div className=\"SuperMarketTemplate\">\n    <div className=\"items-wrapper\">\n      <h2>Products</h2>\n      {items}\n    </div>\n    <div className=\"basket-wrapper\">\n      <h2>Basket</h2>\n      {basket}\n    </div>\n  </div>\n);\n\nexport default SuperMarketTemplate;\n","import React from 'react';\nimport './ShopItem.css';\n\nconst ShopItem = ({ name, price }) => (\n  <div className=\"ShopItem\">\n    <h4>{name}</h4>\n    <div>\n      $&nbsp;\n      {price}\n    </div>\n  </div>\n);\n\nexport default ShopItem;\n","import React from 'react';\nimport ShopItem from './ShopItem.jsx';\n\nconst items = [\n  { name: 'Water', price: 0.85 },\n  { name: 'Ramen', price: 0.9 },\n  { name: 'Potato Chip', price: 1.5 },\n  { name: 'Shrimp Chip', price: 1 },\n];\n\nconst ShopItemList = () => {\n  const itemList = items.map(item => <ShopItem {...item} key={item.name} />);\n  return <div>{itemList}</div>;\n};\n\nexport default ShopItemList;\n","import React from 'react';\nimport './BasketItem.css';\n\nconst BasketItem = ({ name, price, count }) => (\n  <div className=\"BasketItem\">\n    <div className=\"name\">{name}</div>\n    <div className=\"price\">\n      $&nbsp;\n      {price}\n    </div>\n    <div className=\"count\">{count}</div>\n    <div className=\"return\">Return</div>\n  </div>\n);\n\nexport default BasketItem;\n","import React from 'react';\nimport BasketItem from './BasketItem.jsx';\n\nconst BasketItemList = () => (\n  <div>\n    <BasketItem name=\"Potato Chip\" price={1.5} count={2} />\n    <BasketItem name=\"Water\" price={0.85} count={1} />\n    <hr />\n    <p>\n      <b>Total&nbsp;:&nbsp;</b>\n      &nbsp;$&nbsp;3.85\n    </p>\n  </div>\n);\n\nexport default BasketItemList;\n","import React from 'react';\nimport SuperMarketTemplate from './SuperMarketTemplate.jsx';\nimport ShopItemList from './ShopItemList.jsx';\nimport BasketItemList from './BasketItemList.jsx';\n\nconst SuperMarket = () => (\n  <SuperMarketTemplate items={<ShopItemList />} basket={<BasketItemList />} />\n);\n\nexport default SuperMarket;\n","import React, { Component } from 'react';\n// import logo from './logo.svg';\n// import './App.css';\nimport DevTools from 'mobx-react-devtools';\nimport Counter from './components/Counter';\nimport SuperMarket from './components/SuperMarket.jsx';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Counter />\n        <hr />\n        <SuperMarket />\n        {process.env.NODE_ENV === 'development' && <DevTools />}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","/* eslint-disable */\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'mobx-react';\nimport './index.css';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport CounterStore from './stores/CounterStore';\n\nconst counterStore = new CounterStore();\nconst startApp = () => {\n  ReactDOM.render(\n    <Provider counter={counterStore}>\n      <App />\n    </Provider>,\n    document.getElementById('root')\n  );\n  serviceWorker.register();\n};\nif (window.cordova) {\n  document.addEventListener('deviceready', startApp, false);\n} else {\n  startApp();\n}\n","import { observable, action } from 'mobx';\n\nexport default class CounterStore {\n  @observable\n  number = 0;\n\n  @action\n  increase = () => {\n    this.number += 1;\n  };\n\n  @action\n  decrease = () => {\n    this.number -= 1;\n  };\n}\n"],"sourceRoot":""}